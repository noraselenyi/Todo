{"version":3,"sources":["components/navbar.js","components/tasklist.js","actions/actions.js","components/addtask.js","App.js","reducers/reducer.js","index.js"],"names":["Navbar","className","Component","Tasklist","listOfDones","index","this","props","deleteTask","element","doneTask","push","newtask","showDones","map","key","tasks","onClick","getItDone","type","trigger","modal","close","role","aria-label","eraseTask","length","getTodos","todos","getDones","mapDispatchToProps","taskIndex","payload","connect","state","Todos","done","getFromInput","e","setState","target","value","addTask","placeholder","ref","onChange","setNewTask","task","App","reducer","action","concat","slice","splice","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.addf996a.chunk.js","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable react/prefer-stateless-function */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"reactlogo\" />\r\n        <h1 className=\"todoapp\">Todo Application</h1>\r\n        <div className=\"reduxlogo\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTask, doneTask } from '../actions/actions';\r\nimport Popup from 'reactjs-popup';\r\nimport '../css/popup.css';\r\nimport '../css/App.css'\r\n\r\n\r\nclass Tasklist extends Component {\r\n  listOfDones = [];\r\n\r\n  eraseTask(index) {\r\n    this.props.deleteTask(index);\r\n  }\r\n\r\n  getItDone(element, index) {\r\n    this.props.doneTask(index);\r\n    this.listOfDones.push(element.newtask);\r\n    this.props.deleteTask(index);\r\n    this.showDones()\r\n  }\r\n\r\n  showDones() {\r\n    const result = this.listOfDones.map((element, index) =>\r\n      <div className=\"donetask\" key={index}>\r\n        <p key={index}>{element}</p>\r\n      </div>\r\n    );\r\n    return result\r\n  }\r\n\r\n  getTodos(tasks) {\r\n    const result = tasks.map((element, index) => (\r\n      <div className=\"todos\" key={index}>\r\n\r\n        <p key={index}>{element.newtask}</p>\r\n        <div className=\"buttonsForTasks\">\r\n\r\n          <div className=\"donebutton\">\r\n            <button onClick={() => this.getItDone(element, index)} type=\"button\" className=\"check\">\r\n              <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <div className=\"box\" onClick={() => this.getItDone(element, index)}>\r\n              done\r\n            </div>\r\n          </div>\r\n\r\n          <Popup trigger={\r\n            <div className=\"delete\">\r\n              <button className=\"trash\">\r\n                <i className=\"far fa-trash-alt\"></i>\r\n              </button>\r\n              <div className=\"box\">\r\n                delete\r\n              </div>\r\n            </div>\r\n          } modal>\r\n            {close => (\r\n              <div className=\"modal\">\r\n                <div>\r\n                  <p className=\"popupText\">\r\n                  Task is deleted!\r\n                  <span role=\"img\" aria-label=\"tick\">   ✔️</span>\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    className=\"okbutton\"\r\n                    onClick={() => {\r\n                      close();\r\n                      this.eraseTask(index);\r\n                    }}>\r\n                    Ok\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Popup>\r\n        </div>\r\n      </div>\r\n\r\n    ));\r\n    return result;\r\n  }\r\n\r\n  getDones() {\r\n    if (this.listOfDones.length !== 0) {\r\n      return (\r\n        <h1>Dones</h1>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"listtasks\">\r\n          <h1>Tasks</h1>\r\n          {this.getTodos(this.props.todos)}\r\n          {this.getDones()}\r\n          {this.showDones()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ todos: state });\r\n\r\nconst mapDispatchToProps = {\r\n  deleteTask,\r\n  doneTask,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasklist);\r\n","export const addTask = (task) => ({\r\n  type: 'ADD_NEW_TASK',\r\n  payload: task,\r\n});\r\n\r\nexport const deleteTask = (taskIndex) => ({\r\n  type: 'DELETE_TASK',\r\n  payload: taskIndex,\r\n});\r\n\r\nexport const doneTask = (taskIndex) => ({\r\n  type: 'DONE_TASK',\r\n  payload: taskIndex,\r\n});\r\n","import React, { Component } from 'react';\r\n\r\nimport { addTask } from '../actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Todos extends Component {\r\n  state = {\r\n    newtask: '',\r\n    done: false,\r\n  }\r\n\r\n  getFromInput = (e) => {\r\n    this.setState({\r\n      newtask: e.target.value,\r\n    });\r\n  };\r\n\r\n  setNewTask() {\r\n    if (this.state.newtask !== '') {\r\n      this.props.addTask(this.state);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"addTask\">\r\n        <input type=\"text\" placeholder=\"type new task here\" ref=\"task\" onChange={this.getFromInput} />\r\n        <button className=\"addButton\" onClick={() => this.setNewTask()}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addTask,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Todos);\r\n","/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable react/prefer-stateless-function */\r\n/* eslint-disable import/no-named-as-default-member */\r\n/* eslint-disable import/no-named-as-default */\r\n\r\nimport React, { Component } from 'react';\r\nimport Navbar from './components/navbar';\r\nimport Tasklist from './components/tasklist';\r\nimport Todos from './components/addtask';\r\nimport './css/App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <Todos />\r\n        <Tasklist />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","/* eslint-disable no-param-reassign */\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_NEW_TASK':\r\n      state = state.concat(action.payload);\r\n      break;\r\n    case 'DELETE_TASK':\r\n      state = state.slice();\r\n      state.splice(action.payload, 1);\r\n      break;\r\n    case 'DONE_TASK':\r\n      state[action.payload].done = true;\r\n      break;\r\n    default: return state;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n","/* eslint-disable react/jsx-filename-extension */\r\n// import * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport App from './App';\r\nimport reducer from './reducers/reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n), document.getElementById('root'));\r\n\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}